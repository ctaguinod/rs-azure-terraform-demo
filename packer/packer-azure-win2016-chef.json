{
    "variables": {
      "client_id": "{{env `ARM_CLIENT_ID`}}",
      "client_secret": "{{env `ARM_CLIENT_SECRET`}}",
      "tenant_id": "{{env `ARM_TENANT_ID`}}",
      "subscription_id": "{{env `ARM_SUBSCRIPTION_ID`}}"
    },
    "builders": [
      {
        "type": "azure-arm",
          
        "client_id": "{{user `client_id`}}",
        "client_secret": "{{user `client_secret`}}",
        "tenant_id": "{{user `tenant_id`}}",
        "subscription_id": "{{user `subscription_id`}}",

        "managed_image_resource_group_name": "HOYTS-SEA-RSG-ALL-TEST",
        "managed_image_name": "HOYTS-TEST-PACKER-WIN2016-CHEF-01",

        "virtual_network_name": "HOYTS-SEA-VNET01",
        "virtual_network_resource_group_name": "HOYTS-SEA-RSG-ALL-TEST",
        "virtual_network_subnet_name": "DMZ-SUBNET",
        "private_virtual_network_with_public_ip": "True",
        
        "os_type": "Windows",
        "image_publisher": "MicrosoftWindowsServer",
        "image_offer": "WindowsServer",
        "image_sku": "2016-Datacenter",

        "communicator": "winrm",
        "winrm_use_ssl": true,
        "winrm_insecure": true,
        "winrm_timeout": "5m",
        "winrm_username": "packer",
  
        "azure_tags": {
          "env": "development",
          "owner": "carlo"
        },
  
        "location": "Southeast Asia",
        "vm_size": "Standard_DS2_v2"
      }
    ],
    "provisioners": [
      {
        "type": "chef-solo",
        "cookbook_paths": ["../chef/cookbooks"],
        "guest_os_type": "windows",
        "run_list": [
          "demo::default"
        ]
      },
      {
        "type": "powershell",
        "inline": [
            "# echo '>>> Installing IIS ...'",
            "# Add-WindowsFeature Web-Server",
          
            "echo '>>> Waiting for GA to start ...'",
            "# NOTE: the following *3* lines are only needed if you have installed the Guest Agent.",
            "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
            "while ((Get-Service WindowsAzureTelemetryService).Status -ne 'Running') { Start-Sleep -s 5 }",
            "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",

            "echo '>>> Sysprepping VM ...'",
            "if( Test-Path $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml ){ rm $Env:SystemRoot\\windows\\system32\\Sysprep\\unattend.xml -Force}",
            "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
            "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
          ]
      }
    ]
  }